version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: vaultcpa-postgres
    environment:
      POSTGRES_DB: vaultcpa
      POSTGRES_USER: vaultcpa_user
      POSTGRES_PASSWORD: vaultcpa_secure_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./vaultcpa_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./init-db.sh:/docker-entrypoint-initdb.d/02-init.sh
    networks:
      - vaultcpa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vaultcpa_user -d vaultcpa"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: vaultcpa-backend
    environment:
      NODE_ENV: production
      PORT: 3080
      DATABASE_URL: postgresql://vaultcpa_user:vaultcpa_secure_password_2024@postgres:5432/vaultcpa
      JWT_SECRET: your_jwt_secret_key_here
      CORS_ORIGIN: http://localhost:3000
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    ports:
      - "3080:3080"
    networks:
      - vaultcpa-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vaultcpa-frontend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3080
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    ports:
      - "3000:3000"
    networks:
      - vaultcpa-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database Administration
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vaultcpa-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@vaultcpa.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - vaultcpa-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  vaultcpa-network:
    driver: bridge

