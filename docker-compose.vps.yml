# VPS-optimized Docker Compose Configuration with Database Fix (1GB RAM)

services:
  # Database - Optimized for low memory with proper initialization
    # Nginx Reverse Proxy - Memory optimized with SSL
  # Nginx Reverse Proxy - Memory optimized with SSL
  nginx:
    image: nginx:alpine
    container_name: vaultcpa-nginx-vps
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/ssl/certs/financeocr.com.crt:/etc/ssl/certs/financeocr.com.crt:ro
      - /etc/ssl/private/financeocr.com.key:/etc/ssl/private/financeocr.com.key:ro
    networks:
      - vaultcpa-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    # Memory limits for VPS
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  postgres:
    image: postgres:15-alpine
    container_name: vaultcpa-postgres-vps
    env_file:
      - ./server/.env
    environment:
      POSTGRES_DB: vaultcpa
      POSTGRES_USER: vaultcpa_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vaultcpa_secure_password_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      # PostgreSQL memory optimizations
      POSTGRES_SHARED_BUFFERS: 128MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 256MB
      POSTGRES_WORK_MEM: 4MB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
      GEMINI_API_KEY: ${GEMINI_API_KEY:-AIzaSyBlYVRdzP2W6PB-Cu-3mGF1tmyD3LgB2Ro}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./vaultcpa_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./init-db.sh:/docker-entrypoint-initdb.d/02-init.sh
      - ./fix-db-permissions.sql:/docker-entrypoint-initdb.d/03-permissions.sql
    networks:
      - vaultcpa-network
    restart: unless-stopped
    # Memory limits for VPS - increased for complex app
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vaultcpa_user -d vaultcpa"]
      interval: 30s
      timeout: 10s
      retries: 3
    # PostgreSQL configuration for low memory
    command: >
      postgres
      -c shared_buffers=128MB
      -c effective_cache_size=256MB
      -c work_mem=4MB
      -c maintenance_work_mem=64MB
      -c max_connections=50
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # Backend API Server - Memory optimized
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.vps
    container_name: vaultcpa-backend-vps
    env_file:
      - ./server/.env
    environment:
      NODE_ENV: production
      PORT: 3080
      DATABASE_URL: postgresql://vaultcpa_user:${POSTGRES_PASSWORD:-vaultcpa_secure_password_2024}@vaultcpa-postgres-vps:5432/vaultcpa
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key_here}
      CORS_ORIGIN: ${CORS_ORIGIN:-https://financeocr.com}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-AIzaSyAATadcL-l2ZBoLoWnCeEixbrV2PFM3POc}
      FRONTEND_URL: ${FRONTEND_URL:-https://financeocr.com}
      # Node.js memory optimizations
      NODE_OPTIONS: "--max-old-space-size=512"
    ports:
      - "3080:3080"
    networks:
      - vaultcpa-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    # Memory limits for VPS - increased for complex app
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js App - Memory optimized
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.vps
    container_name: vaultcpa-frontend-vps
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://financeocr.com/api}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-https://financeocr.com}
      # Node.js memory optimizations
      NODE_OPTIONS: "--max-old-space-size=1024"
    ports:
      - "3000:3000"
    networks:
      - vaultcpa-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    # Memory limits for VPS - increased for complex app
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  vaultcpa-network:
    driver: bridge

