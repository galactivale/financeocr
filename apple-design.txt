# Apple-Inspired Design System Prompt Template

## üé® Core Design Philosophy

### Apple's Design Principles
1. **Clarity** - Remove clutter, focus on essential information
2. **Deference** - Content is king, UI supports but doesn't compete
3. **Depth** - Use layering, shadows, and motion to create hierarchy

### Visual Hierarchy
- **Primary Actions**: Bold, prominent, with clear visual weight
- **Secondary Actions**: Subtle, supportive, don't compete for attention
- **Information Architecture**: Logical flow from most to least important

## üéØ Design System Specifications

### Color Palette
```
Primary Background: bg-black (pure black for maximum contrast)
Secondary Background: bg-white/5 (subtle transparency for depth)
Card Backgrounds: bg-white/5 with backdrop-blur-xl
Borders: border-white/10 (subtle white borders)
Text Primary: text-white (maximum readability)
Text Secondary: text-gray-400 (hierarchical information)
Text Muted: text-gray-300 (supporting details)
Accent Colors: 
  - Primary Actions: bg-blue-600
  - Success: bg-green-600
  - Warning: bg-orange-600
  - Danger: bg-red-600
```

### Typography Scale
```
Headers: text-2xl font-semibold (main titles)
Subheaders: text-xl font-semibold (section titles)
Body Large: text-lg font-medium (important content)
Body: text-base (standard content)
Body Small: text-sm (supporting text)
Labels: text-xs font-medium (metadata)
```

### Spacing System (6-unit grid)
```
Micro: space-x-1, space-y-1 (tight spacing)
Small: space-x-2, space-y-2 (component spacing)
Medium: space-x-4, space-y-4 (section spacing)
Large: space-x-6, space-y-6 (major sections)
Extra Large: space-x-8, space-y-8 (page sections)
Padding: p-6 (standard card padding)
Margins: mb-8 (section separation)
```

### Border Radius
```
Small: rounded-lg (buttons, small elements)
Medium: rounded-xl (cards, inputs)
Large: rounded-2xl (main containers, modals)
```

## üèóÔ∏è Layout Architecture

### Header Design
```jsx
<div className="sticky top-0 z-30 bg-black/80 backdrop-blur-xl border-b border-white/10">
  <div className="max-w-7xl mx-auto px-6 py-4">
    <div className="flex items-center justify-between">
      {/* Icon with gradient background */}
      <div className="w-10 h-10 bg-gradient-to-br from-red-500 to-red-600 rounded-2xl flex items-center justify-center shadow-lg shadow-red-500/25">
        <Icon className="w-5 h-5 text-white" />
      </div>
      {/* Title and subtitle */}
      <div>
        <h1 className="text-2xl font-semibold text-white tracking-tight">Page Title</h1>
        <p className="text-gray-400 text-sm">Descriptive subtitle</p>
      </div>
      {/* Action buttons */}
    </div>
  </div>
</div>
```

### Stats Cards Grid
```jsx
<div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
  <Card className="bg-white/5 backdrop-blur-xl border-white/10 rounded-2xl">
    <CardBody className="p-6">
      <div className="flex items-center justify-between">
        <div>
          <p className="text-gray-400 text-sm font-medium">Label</p>
          <p className="text-3xl font-bold text-white mt-1">Value</p>
        </div>
        <div className="w-12 h-12 bg-color-500/20 rounded-2xl flex items-center justify-center">
          <Icon className="w-6 h-6 text-color-400" />
        </div>
      </div>
    </CardBody>
  </Card>
</div>
```

### Search and Controls Bar
```jsx
<Card className="bg-white/5 backdrop-blur-xl border-white/10 rounded-2xl mb-8">
  <CardBody className="p-6">
    <div className="flex items-center justify-between">
      <div className="flex items-center space-x-4 flex-1">
        {/* Search input */}
        <div className="relative flex-1 max-w-md">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" />
          <input
            type="text"
            placeholder="Search..."
            className="w-full pl-10 pr-4 py-3 bg-white/5 border border-white/10 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500/50 transition-all duration-200"
          />
        </div>
        {/* Filter buttons */}
        <div className="flex items-center space-x-2">
          <Button
            size="sm"
            variant={active ? "solid" : "ghost"}
            className={active ? "bg-color-600 text-white" : "text-gray-400 hover:text-white hover:bg-white/10"}
          >
            Filter
          </Button>
        </div>
      </div>
    </div>
  </CardBody>
</Card>
```

## üì± Component Patterns

### Grid View Cards
```jsx
<Card className="bg-white/5 backdrop-blur-xl border-white/10 rounded-2xl hover:bg-white/10 transition-all duration-300 cursor-pointer group">
  <CardBody className="p-6">
    <div className="flex items-start justify-between mb-4">
      <div className="flex items-center space-x-3">
        {/* Status icon */}
        <div className="w-10 h-10 bg-color-500/20 rounded-2xl flex items-center justify-center">
          <Icon className="w-5 h-5 text-color-400" />
        </div>
        <div>
          <h3 className="text-white font-semibold text-sm">Title</h3>
          <p className="text-gray-400 text-xs">Subtitle</p>
        </div>
      </div>
      {/* Status badge */}
      <div className="px-2 py-1 rounded-lg text-xs font-medium bg-color-500/20 text-color-400">
        Status
      </div>
    </div>
    
    <div className="space-y-3">
      <p className="text-gray-300 text-sm line-clamp-2">Description</p>
      
      <div className="flex items-center justify-between">
        <div className="flex items-center space-x-2">
          <Icon className="w-4 h-4 text-gray-400" />
          <span className="text-white font-medium text-sm">Value</span>
        </div>
        <ChevronRight className="w-4 h-4 text-gray-400 group-hover:text-white transition-colors" />
      </div>
    </div>
  </CardBody>
</Card>
```

### List View Rows
```jsx
<div className="divide-y divide-white/10">
  {items.map((item) => (
    <div className="p-6 hover:bg-white/5 transition-colors duration-200 cursor-pointer group">
      <div className="flex items-center justify-between">
        <div className="flex items-center space-x-4 flex-1">
          {/* Icon */}
          <div className="w-12 h-12 bg-color-500/20 rounded-2xl flex items-center justify-center">
            <Icon className="w-6 h-6 text-color-400" />
          </div>
          
          <div className="flex-1 min-w-0">
            <div className="flex items-center space-x-3 mb-1">
              <h3 className="text-white font-semibold text-base">Title</h3>
              <span className="inline-flex items-center px-2 py-1 rounded-lg text-xs font-medium bg-blue-500/20 text-blue-400">
                Badge
              </span>
            </div>
            <p className="text-gray-300 text-sm mb-2">Description</p>
            
            <div className="flex items-center space-x-6 text-xs text-gray-400">
              <div className="flex items-center space-x-1">
                <Icon className="w-3 h-3" />
                <span>Value</span>
              </div>
            </div>
          </div>
        </div>
        
        <div className="flex items-center space-x-3">
          {/* Status badge */}
          <div className="px-3 py-1 rounded-lg text-xs font-medium bg-color-500/20 text-color-400">
            Status
          </div>
          
          {/* Action buttons */}
          <div className="flex items-center space-x-2">
            <Button
              size="sm"
              variant="ghost"
              className="text-gray-400 hover:text-white hover:bg-white/10 rounded-xl"
            >
              <Icon className="w-4 h-4" />
            </Button>
          </div>
          
          <ChevronRight className="w-5 h-5 text-gray-400 group-hover:text-white transition-colors" />
        </div>
      </div>
    </div>
  ))}
</div>
```

### Modal Design
```jsx
<Modal 
  isOpen={isOpen} 
  onOpenChange={setIsOpen}
  size="5xl"
  classNames={{
    base: "bg-black/95 backdrop-blur-xl border-white/10",
    header: "border-b border-white/10",
    body: "py-6",
    footer: "border-t border-white/10"
  }}
>
  <ModalContent>
    {(onClose) => (
      <>
        <ModalHeader className="flex flex-col gap-1">
          <div className="flex items-center space-x-3">
            <div className="w-8 h-8 bg-gradient-to-br from-color-500 to-color-600 rounded-xl flex items-center justify-center">
              <Icon className="w-4 h-4 text-white" />
            </div>
            <div>
              <h3 className="text-white text-xl font-semibold">Modal Title</h3>
              <p className="text-gray-400 text-sm">Modal description</p>
            </div>
          </div>
        </ModalHeader>

        <ModalBody>
          {/* Content cards */}
          <Card className="bg-white/5 backdrop-blur-xl border-white/10 rounded-2xl">
            <CardBody className="p-6">
              {/* Content */}
            </CardBody>
          </Card>
        </ModalBody>

        <ModalFooter>
          <div className="flex items-center justify-between w-full">
            <div className="flex items-center space-x-3">
              <Button
                variant="ghost"
                className="text-gray-400 hover:text-white hover:bg-white/10 rounded-xl"
                onPress={onClose}
              >
                Cancel
              </Button>
            </div>
            
            <div className="flex items-center space-x-3">
              <Button
                className="bg-blue-600 hover:bg-blue-700 text-white rounded-xl shadow-lg shadow-blue-600/25"
              >
                Primary Action
              </Button>
            </div>
          </div>
        </ModalFooter>
      </>
    )}
  </ModalContent>
</Modal>
```

## üé≠ Interactive States

### Button Variants
```jsx
// Primary Action
className="bg-blue-600 hover:bg-blue-700 text-white rounded-xl shadow-lg shadow-blue-600/25"

// Secondary Action
className="bg-white/5 text-gray-300 hover:bg-white/10 rounded-xl"

// Ghost Button
className="text-gray-400 hover:text-white hover:bg-white/10 rounded-xl"

// Active State
className="bg-color-600 text-white shadow-lg shadow-color-600/25"
```

### Hover Effects
```jsx
// Card hover
className="hover:bg-white/10 transition-all duration-300"

// Button hover
className="hover:bg-white/10 transition-colors duration-200"

// Icon hover
className="group-hover:text-white transition-colors"
```

### Loading States
```jsx
// Spinner
<div className="w-12 h-12 border-4 border-gray-600 border-t-blue-500 rounded-full animate-spin"></div>

// Skeleton
<div className="animate-pulse bg-white/5 rounded-xl h-4 w-3/4"></div>
```

## üé® Visual Effects

### Backdrop Blur
```jsx
className="backdrop-blur-xl" // For glass morphism effect
```

### Shadows
```jsx
className="shadow-lg shadow-color-500/25" // Colored shadows for depth
```

### Gradients
```jsx
className="bg-gradient-to-br from-color-500 to-color-600" // Subtle gradients
```

## üìê Responsive Design

### Breakpoints
```jsx
// Mobile first approach
className="grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4"

// Spacing adjustments
className="px-4 md:px-6 lg:px-8"

// Text sizing
className="text-sm md:text-base lg:text-lg"
```

### Container Widths
```jsx
// Main container
className="max-w-7xl mx-auto px-6"

// Content width
className="max-w-md" // For search inputs
className="max-w-lg" // For forms
```

## üéØ Implementation Checklist

### ‚úÖ Design System Setup
- [ ] Define color palette with proper contrast ratios
- [ ] Establish typography scale and hierarchy
- [ ] Set up spacing system (6-unit grid)
- [ ] Configure border radius values
- [ ] Define shadow and blur effects

### ‚úÖ Layout Structure
- [ ] Create sticky header with backdrop blur
- [ ] Implement stats cards grid
- [ ] Add search and controls bar
- [ ] Design dual view modes (grid/list)
- [ ] Create modal system

### ‚úÖ Component Patterns
- [ ] Build reusable card components
- [ ] Implement button variants
- [ ] Create form input styles
- [ ] Design loading and error states
- [ ] Add interactive hover effects

### ‚úÖ Accessibility
- [ ] Ensure proper contrast ratios
- [ ] Add focus states for keyboard navigation
- [ ] Implement semantic HTML structure
- [ ] Test with screen readers
- [ ] Validate color accessibility

### ‚úÖ Performance
- [ ] Optimize animations and transitions
- [ ] Implement efficient re-renders
- [ ] Use proper state management
- [ ] Minimize bundle size
- [ ] Test on various devices

## üöÄ Usage Instructions

1. **Start with the color palette** - Apply the black theme consistently
2. **Use the spacing system** - Follow the 6-unit grid for consistency
3. **Implement the layout architecture** - Header, stats, controls, content
4. **Apply component patterns** - Use the provided templates
5. **Add interactive states** - Hover effects, loading states, transitions
6. **Test responsiveness** - Ensure mobile-first design works
7. **Validate accessibility** - Check contrast and keyboard navigation

## üìù Customization Notes

- **Color Accents**: Adjust the accent colors (blue, green, orange, red) to match your brand
- **Spacing**: Modify the 6-unit grid if needed for your specific layout
- **Typography**: Adjust font sizes while maintaining hierarchy
- **Components**: Extend the patterns for your specific use cases
- **Animations**: Customize transition durations and easing functions

This template provides a comprehensive foundation for creating Apple-inspired interfaces that are beautiful, functional, and accessible.
